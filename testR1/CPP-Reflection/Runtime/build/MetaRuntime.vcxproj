<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{0A6ABB8F-F399-3A33-8BF1-4340A3377238}</ProjectGUID>
    <WindowsTargetPlatformVersion>10.0.10586.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>MetaRuntime</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\build\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">MetaRuntime.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">MetaRuntime</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\build\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">MetaRuntime.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">MetaRuntime</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\build\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">MetaRuntime.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">MetaRuntime</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\build\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">MetaRuntime.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">MetaRuntime</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">.lib</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common\Lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>Precompiled.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common\Lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common\Lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common\Lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>Precompiled.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common\Lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common\Lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common\Lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>Precompiled.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common\Lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common\Lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common\Lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>Precompiled.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common\Lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common;D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\..\Common\Lib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\VariantPolicy.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Argument.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\ArgumentConfig.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Array.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\ArrayVariantContainer.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\ArrayWrapper.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\ArrayWrapperBase.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\ArrayWrapperContainer.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Constructor.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\ConstructorInvoker.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\ConstructorInvokerBase.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Destructor.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\DestructorInvoker.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\DestructorInvokerBase.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Enum.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\EnumBase.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\EnumContainer.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Field.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\FieldGetter.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\FieldGetterBase.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\FieldSetter.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\FieldSetterBase.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Function.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\FunctionInvoker.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\FunctionInvokerBase.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Global.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\GlobalGetter.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\GlobalGetterBase.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\GlobalSetter.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\GlobalSetterBase.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Invokable.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\InvokableConfig.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Macros.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Meta.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\MetaContainer.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\MetaManager.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\MetaProperty.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\MetaTraits.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Method.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\MethodInvoker.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\MethodInvokerBase.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Object.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\ObjectWrapper.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Precompiled.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\ReflectionDatabase.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\ReflectionModule.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\RuntimeMetaProperties.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Type.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\TypeCreator.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\TypeConfig.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\TypeData.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\TypeInfo.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\TypeID.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Variant.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\VariantBase.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\VariantContainer.h" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\Array.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\EnumContainer.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\FieldGetter.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\FieldSetter.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\Function.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\FunctionInvoker.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\GlobalGetter.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\GlobalSetter.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\Invokable.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\MetaManager.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\MetaProperty.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\Method.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\MethodInvoker.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\ReflectionDatabase.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\Type.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\TypeCreator.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\TypeData.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\TypeInfo.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\TypeUnpacker.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\Variant.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\VariantContainer.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\VariantContainerStandardTypes.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\VoidFunctionInvoker.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\VoidMethodInvoker.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\Argument.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\ArrayVariantContainer.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\ArrayWrapper.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\ArrayWrapperContainer.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\Constructor.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\ConstructorInvoker.hpp" />
    <ClInclude Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Impl\DestructorInvoker.hpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\VariantContainer.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Argument.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\ArrayWrapper.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Constructor.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Destructor.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Enum.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\EnumBase.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Field.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Function.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Global.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Invokable.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\MetaContainer.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\MetaManager.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Method.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\ObjectWrapper.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Precompiled.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Precompiled.h</PrecompiledHeaderFile>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Precompiled.h</PrecompiledHeaderFile>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Precompiled.h</PrecompiledHeaderFile>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Precompiled.h</PrecompiledHeaderFile>
    </ClCompile>
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\ReflectionDatabase.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\ReflectionModule.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Type.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\TypeCreator.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\TypeData.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\Variant.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Runtime\VariantBase.cpp" />
    <ClCompile Include="D:\work\Github\test-cpp-reflection\testR1\CPP-Reflection\Common\Lib\json11.cpp">
      <AdditionalOptions Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"> /Y- %(AdditionalOptions)</AdditionalOptions>
      <AdditionalOptions Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"> /Y- %(AdditionalOptions)</AdditionalOptions>
      <AdditionalOptions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"> /Y- %(AdditionalOptions)</AdditionalOptions>
      <AdditionalOptions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"> /Y- %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="E:/work/work_cpp/test-cpp-reflection/testR1/CPP-Reflection/Runtime/build/ZERO_CHECK.vcxproj">
      <Project>FA21F6CA-D8E6-3F2A-9686-D0414D9D390D</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>